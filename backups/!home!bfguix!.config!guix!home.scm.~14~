;; This is my declarative home environment configuration.
(use-modules (gnu home)
             (gnu services)
             (gnu home services)
             (gnu home services shells)
             (gnu home services desktop)
             (gnu home services fontutils)
             (gnu home services gnupg)
             (gnu packages)
             (gnu packages shells)
             (guix gexp))

;; The main home-environment definition
(home-environment
  ;; Load packages from manifest file
  (packages
   (specifications->packages
    (load (string-append (getenv "HOME") "/.config/guix/manifest.scm"))))

  ;; The 'services' field configures our environment.
  (services
   (list
    ;; zsh-service-type definition
    (service home-zsh-service-type
             (home-zsh-configuration
              (xdg-flavor? #t)
              (environment-variables
               '(("SHELL" . "zsh")
                 ("PATH" . "$HOME/.local/bin:$HOME/.npm-global/bin:$HOME/.cargo/bin:$PATH")
                 ("BROWSER" . "google-chrome")
                 ("EDITOR" . "emacs")
                 ("TERMINAL" . "alacritty")
                 ("GIT_TERMINAL_PROMPT" . "1")
                 ;; GTK and Qt theming environment variables
                 ("GTK_THEME" . "Adwaita:dark")
                 ("QT_QPA_PLATFORMTHEME" . "gtk3")
                 ("QT_STYLE_OVERRIDE" . "adwaita-dark")
                 ;; Cursor size (16, 24, 32, 48, 64)
                 ("XCURSOR_SIZE" . "16")))
              (zshrc
               (list (plain-file "zshrc"
                             (string-append
                              ;; -- Start of Full Zsh Configuration --
                              "mkdir -p ${XDG_STATE_HOME:-$HOME/.local/state}/zsh\n"
                              "HISTFILE=${XDG_STATE_HOME:-$HOME/.local/state}/zsh/history\n"
                              "HISTSIZE=10000\n"
                              "SAVEHIST=10000\n"
                              "setopt APPEND_HISTORY\n"
                              "setopt INC_APPEND_HISTORY\n"
                              "setopt SHARE_HISTORY\n"
                              "setopt histignorealldups\n\n"
                              "source ~/.guix-home/profile/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh\n"
                              "source ~/.guix-home/profile/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n\n"
                              "eval $(keychain --quiet --eval id_ecdsa)\n\n"
                              "export GPG_TTY=$(tty)\n"
                              "gpg-connect-agent updatestartuptty /bye >/dev/null 2>&1\n\n"
                              "bindkey -e\n"
                              "export KEYTIMEOUT=1\n"
                              "typeset -g -A key\n"
                              "key[Home]=\"${terminfo[khome]}\"\n"
                              "key[End]=\"${terminfo[kend]}\"\n"
                              "key[Insert]=\"${terminfo[kich1]}\"\n"
                              "key[Backspace]=\"${terminfo[kbs]}\"\n"
                              "key[Delete]=\"${terminfo[kdch1]}\"\n"
                              "key[Up]=\"${terminfo[kcuu1]}\"\n"
                              "key[Down]=\"${terminfo[kcud1]}\"\n"
                              "key[Left]=\"${terminfo[kcub1]}\"\n"
                              "key[Right]=\"${terminfo[kcuf1]}\"\n"
                              "[[ -n \"${key[Home]}\"   ]] && bindkey -- \"${key[Home]}\"   beginning-of-line\n"
                              "[[ -n \"${key[End]}\"    ]] && bindkey -- \"${key[End]}\"    end-of-line\n"
                              "[[ -n \"${key[Left]}\"   ]] && bindkey -- \"${key[Left]}\"   backward-char\n"
                              "[[ -n \"${key[Right]}\"  ]] && bindkey -- \"${key[Right]}\"  forward-char\n"
                              "[[ -n \"${key[Control-Left]}\"  ]] && bindkey -- \"${terminfo[kLFT5]}\"  backward-word\n"
                              "[[ -n \"${key[Control-Right]}\" ]] && bindkey -- \"${terminfo[kRIT5]}\" forward-word\n\n"
                              "autoload -Uz up-line-or-beginning-search down-line-or-beginning-search\n"
                              "zle -N up-line-or-beginning-search; zle -N down-line-or-beginning-search\n"
                              "[[ -n \"${key[Up]}\"   ]] && bindkey -- \"${key[Up]}\"   up-line-or-beginning-search\n"
                              "[[ -n \"${key[Down]}\" ]] && bindkey -- \"${key[Down]}\" down-line-or-beginning-search\n\n"
                              "autoload -Uz compinit; compinit\n"
                              "zstyle ':completion:*' menu select\n"
                              "setopt COMPLETE_ALIASES\n\n"
                              "fpath=( \"$HOME/.zfunctions\" $fpath )\n"
                              "autoload -U promptinit; promptinit\n"
                              "prompt spaceship\n\n"
                              "SPACESHIP_PROMPT_ORDER=(\n  user dir host git node python ruby java rust line_sep char\n)\n"
                              "SPACESHIP_PROMPT_ADD_NEWLINE=false\n"
                              "SPACESHIP_CHAR_SYMBOL=\"âžœ\"\n"
                              "SPACESHIP_DIR_TRUNC=3\n"
                              "SPACESHIP_EXEC_TIME_SHOW=false\n\n"
                              "alias ls='ls --color=auto'\n"
                              "alias l='ls -lah'\n"
                              "alias grep='grep --color=auto'\n"
                              "alias diff='diff --color=auto'\n"
                              "alias multipull=\"find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} pull \\;\"\n"
			                           "alias v_aider-chat=\"source $HOME/.venv/aider-chat/bin/activate\"\n"
                              "alias v_crawl4ai=\"source $HOME/.venv/crawl4ai/bin/activate\"\n"
			                           ;; Add aliases for installing tools via pip (works better on Guix)
                              "alias install-ruff='pip3 install --user ruff'\n"
                              "alias install-ruff-lsp='pip3 install --user ruff-lsp'\n"
                              "alias install-catt='pip3 install --user catt'\n"
                              "alias install-markdown='pip3 install --user markdown-it-py'\n"
                              "alias install-mdformat='pip3 install --user mdformat'\n"
                              "alias install-litellm='pip3 install --user \"litellm[proxy]\"'\n"
                              ;; "alias install-dprint='npm install -g dprint'\n"
                              "alias update-python-tools='pip3 install --user --upgrade catt ruff ruff-lsp markdown-it-py mdformat litellm && echo \"Updated python tools to latest versions\"'\n"
                              ))))))

    ;; Desktop services for theming
    (service home-xdg-configuration-files-service-type
             `(("gtk-3.0/settings.ini"
                ,(plain-file "gtk3-settings.ini"
                            "[Settings]\n\
gtk-theme-name=Adwaita-dark\n\
gtk-icon-theme-name=Adwaita\n\
gtk-cursor-theme-name=Vanilla-DMZ
gtk-cursor-theme-size=16\n\
gtk-font-name=Cantarell 10\n\
gtk-application-prefer-dark-theme=true\n"))
               ("gtk-2.0/gtkrc"
                ,(plain-file "gtk2-gtkrc"
                            "gtk-theme-name=\"Adwaita-dark\"\n\
gtk-icon-theme-name=\"Adwaita\"\n\
gtk-cursor-theme-name=\"Vanilla-DMZ\"
gtk-cursor-theme-size=16\n\
gtk-font-name=\"Cantarell 10\"\n"))
               ("qt5ct/qt5ct.conf"
                ,(plain-file "qt5ct.conf"
                            "[Appearance]\n\
style=Adwaita-Dark\n\
color_scheme_path=/usr/share/qt5ct/colors/airy.conf\n\
custom_palette=false\n\
icon_theme=Adwaita\n\
\n\
[Fonts]\n\
fixed=@Variant(\\0\\0\\0@\\0\\0\\0\\\"\\0\\x43\\0\\x61\\0s\\0k\\0\\x61\\0y\\0\\x64\\0i\\0\\x61\\0M\\0o\\0n\\0o\\0 \\0N\\0\\x65\\0r\\0\\x64\\0 \\0\\x46\\0o\\0n\\0t\\0 \\0M\\0o\\0n\\0o@(\\0\\0\\0\\0\\0\\0\\xff\\xff\\xff\\xff\\x5\\x1\\0\\x32\\x10)\n\
general=@Variant(\\0\\0\\0@\\0\\0\\0\\x12\\0\\x43\\0\\x61\\0n\\0t\\0\\x61\\0r\\0\\x65\\0l\\0l@$\\0\\0\\0\\0\\0\\0\\xff\\xff\\xff\\xff\\x5\\x1\\0\\x32\\x10)\n\
\n\
[Interface]\n\
activate_item_on_single_click=1\n\
buttonbox_layout=0\n\
cursor_flash_time=1000\n\
dialog_buttons_have_icons=1\n\
double_click_interval=400\n\
gui_effects=@Invalid()\n\
keyboard_scheme=2\n\
menus_have_icons=true\n\
show_shortcuts_in_context_menus=true\n\
stylesheets=@Invalid()\n\
toolbutton_style=4\n\
underline_shortcut=1\n\
wheel_scroll_lines=3\n"))
               ("qt6ct/qt6ct.conf"
                ,(plain-file "qt6ct.conf"
                            "[Appearance]\n\
style=Adwaita-Dark\n\
color_scheme_path=\n\
custom_palette=false\n\
icon_theme=Adwaita\n\
\n\
[Fonts]\n\
fixed=\"CaskaydiaMono Nerd Font Mono,10,-1,5,400,0,0,0,0,0,0,0,0,0,0,1\"\n\
general=\"Cantarell,10,-1,5,400,0,0,0,0,0,0,0,0,0,0,1\"\n\
\n\
[Interface]\n\
activate_item_on_single_click=1\n\
buttonbox_layout=0\n\
cursor_flash_time=1000\n\
dialog_buttons_have_icons=1\n\
double_click_interval=400\n\
gui_effects=@Invalid()\n\
keyboard_scheme=2\n\
menus_have_icons=true\n\
show_shortcuts_in_context_menus=true\n\
stylesheets=@Invalid()\n\
toolbutton_style=4\n\
underline_shortcut=1\n\
wheel_scroll_lines=3\n"))))

    ;; gpg-agent service definition
    (service home-gpg-agent-service-type
             (home-gpg-agent-configuration
              (pinentry-program
               (file-append (specification->package "pinentry-tty")
                           "/bin/pinentry-tty"))
              (default-cache-ttl 28800)
              (max-cache-ttl 86400)))

    ;; Font service definition
    (simple-service 'custom-fonts
                    home-fontconfig-service-type
                    (list
                     '(alias (family "serif") (prefer (family "Liberation Serif")))
                     '(alias (family "sans-serif") (prefer (family "Cantarell")))
                     '(alias (family "monospace") (prefer (family "CaskaydiaMono Nerd Font Mono")))
                     '(match (@ (target "font"))
                             (edit (@ (name "hintstyle") (mode "assign")) (const "hintslight"))
                             (edit (@ (name "rgba") (mode "assign")) (const "rgb"))
                             (edit (@ (name "antialias") (mode "assign")) (bool "true"))
                             (edit (@ (name "hinting") (mode "assign")) (bool "true"))))))))
