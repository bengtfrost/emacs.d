;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(Info-search-history minibuffer-history read-number-history file-name-history extended-command-history buffer-name-history yes-or-no-p-history))
(setq Info-search-history '("guile"))
(setq minibuffer-history '("localhost" "no" "org"))
(setq read-number-history '("37146" "0"))
(setq file-name-history '("~/.emacs.d/.gitignore" "~/.emacs.d/lisp/langs.el" "~/Dokument/linux/Guix/GuileGuix/Racket/emacs-geiser-racket.md" "~/.emacs.d/init.el" "~/.config/zsh/.zshenv" "~/.config/zsh/.zshrc" "~/Dokument/linux/Guix/GuileGuix/Racket/guix-racket-install.md" "~/.config/guix/manifest.scm" "~/.config/guix/home.scm" "~/" "~/.zshenv" "~/Downloads/akku-v1.1.0/Makefile.am" "~/Downloads/akku-v1.1.0/configure.ac" "~/.config/gtk-2.0/gtkrc" "~/.config/gtk-3.0/settings.ini" "~/.config/gtk-3.0/gtk-3.0_settings.ini" "~/.config/gtk-2.0/gtkrc" "~/.config/guix/home.scm" "~/home.scm" "~/Dokument/linux/Void/Suckless/configs/dot-gtkrc-2.0" "~/Dokument/linux/Void/Suckless/configs/dot-config_gtk-3.0_settings.ini" "~/Dokument/linux/Guix/GuileGuix/Books/" "~/Utveckling/LiSP-2ndEdition-2006Dec11/README" "~/Utveckling/LiSP-2ndEdition-2006Dec11/Makefile" "~/.config/i3/config"))
(setq extended-command-history '("just-one-space" "geiser-racket" "view-echo-area-messages" "geiser-racket-connect" "just-one-space" "geiser-mode" "just-one-space" "geiser-mode" "geiser-guile" "just-one-space" "geiser-mode" "just-one-space" "buffer-menu" "geiser-eval-interrupt" "just-one-space" "geiser-eval-interrupt" "eval-last-sexp" "just-one-space" "geiser-guile" "treesit-auto-install-all" "list-packages" "package-install" "info" "Info-search" "geiser-guile"))
(setq buffer-name-history '("*Geiser Guile REPL*" "*scratch*" "*Geiser Guile REPL*" "*scratch*" "*Geiser Guile REPL*" "*scratch*" "*Messages*" "*Buffer List*" "*scratch*" "*Geiser Messages*" "*Geiser Guile REPL*<2>" "*Geiser Guile REPL*" "*scratch*" "*Messages*" "*scratch*" "*Messages*" "*Warnings*" "*Messages*" "*guile-lsp::stderr*" "OpenSubtitlesDownload.py"))
(setq yes-or-no-p-history '("yes"))
(setq projectile-project-command-history '#s(hash-table test equal))
